$date
  Sun Jun 23 21:41:58 2024
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module textio $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module cpu_tb $end
$var reg 1 ! enable $end
$var reg 1 " mr $end
$var reg 16 # pc_count[15:0] $end
$var reg 16 $ instruct[15:0] $end
$scope module bip $end
$var reg 1 % enable $end
$var reg 1 & mr $end
$var reg 16 ' pc_count[15:0] $end
$var reg 16 ( instruction[15:0] $end
$var reg 1 ) internal_clk $end
$scope module timer $end
$var reg 1 * clk $end
$var reg 1 + enable $end
$upscope $end
$scope module pc_counter $end
$var reg 1 , clk $end
$var reg 1 - mr $end
$var reg 16 . count[15:0] $end
$var reg 16 / count_temp[15:0] $end
$upscope $end
$scope module rom $end
$var reg 1 0 cs $end
$var reg 1 1 oe $end
$var reg 16 2 address[15:0] $end
$var reg 16 3 data_out[15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
1!
0"
b0000000000000000 #
b1010101010101010 $
1%
0&
b0000000000000000 '
b1010101010101010 (
1)
1*
1+
1,
0-
b0000000000000000 .
b0000000000000000 /
00
01
b0000000000000000 2
b1010101010101010 3
#500000
0)
0*
0,
#1000000
1"
1&
1)
1*
1,
1-
#1500000
b0000000000000001 #
b1011101110111011 $
b0000000000000001 '
b1011101110111011 (
0)
0*
0,
b0000000000000001 .
b0000000000000001 /
b0000000000000001 2
b1011101110111011 3
#2000000
1)
1*
1,
#2500000
b0000000000000010 #
b1100110011001100 $
b0000000000000010 '
b1100110011001100 (
0)
0*
0,
b0000000000000010 .
b0000000000000010 /
b0000000000000010 2
b1100110011001100 3
#3000000
1)
1*
1,
#3500000
b0000000000000011 #
b1101110111011101 $
b0000000000000011 '
b1101110111011101 (
0)
0*
0,
b0000000000000011 .
b0000000000000011 /
b0000000000000011 2
b1101110111011101 3
#4000000
1)
1*
1,
#4500000
b0000000000000100 #
b0000000000000000 $
b0000000000000100 '
b0000000000000000 (
0)
0*
0,
b0000000000000100 .
b0000000000000100 /
b0000000000000100 2
b0000000000000000 3
#5000000
1)
1*
1,
#5500000
b0000000000000101 #
b0000000000000101 '
0)
0*
0,
b0000000000000101 .
b0000000000000101 /
b0000000000000101 2
#6000000
1)
1*
1,
#6500000
b0000000000000110 #
b0000000000000110 '
0)
0*
0,
b0000000000000110 .
b0000000000000110 /
b0000000000000110 2
#7000000
1)
1*
1,
#7500000
b0000000000000111 #
b0000000000000111 '
0)
0*
0,
b0000000000000111 .
b0000000000000111 /
b0000000000000111 2
#8000000
0"
b0000000000000000 #
b1010101010101010 $
0&
b0000000000000000 '
b1010101010101010 (
1)
1*
1,
0-
b0000000000000000 .
b0000000000000000 /
b0000000000000000 2
b1010101010101010 3
#8500000
0)
0*
0,
#9000000
1"
1&
1)
1*
1,
1-
#9500000
b0000000000000001 #
b1011101110111011 $
b0000000000000001 '
b1011101110111011 (
0)
0*
0,
b0000000000000001 .
b0000000000000001 /
b0000000000000001 2
b1011101110111011 3
#10000000
1)
1*
1,
#10500000
b0000000000000010 #
b1100110011001100 $
b0000000000000010 '
b1100110011001100 (
0)
0*
0,
b0000000000000010 .
b0000000000000010 /
b0000000000000010 2
b1100110011001100 3
#11000000
1)
1*
1,
#11500000
b0000000000000011 #
b1101110111011101 $
b0000000000000011 '
b1101110111011101 (
0)
0*
0,
b0000000000000011 .
b0000000000000011 /
b0000000000000011 2
b1101110111011101 3
#12000000
1)
1*
1,
#12500000
b0000000000000100 #
b0000000000000000 $
b0000000000000100 '
b0000000000000000 (
0)
0*
0,
b0000000000000100 .
b0000000000000100 /
b0000000000000100 2
b0000000000000000 3
#13000000
1)
1*
1,
#13500000
b0000000000000101 #
b0000000000000101 '
0)
0*
0,
b0000000000000101 .
b0000000000000101 /
b0000000000000101 2
#14000000
1)
1*
1,
#14500000
b0000000000000110 #
b0000000000000110 '
0)
0*
0,
b0000000000000110 .
b0000000000000110 /
b0000000000000110 2
#15000000
1)
1*
1,
#15500000
b0000000000000111 #
b0000000000000111 '
0)
0*
0,
b0000000000000111 .
b0000000000000111 /
b0000000000000111 2
#16000000
1)
1*
1,
#16500000
b0000000000001000 #
b0000000000001000 '
0)
0*
0,
b0000000000001000 .
b0000000000001000 /
b0000000000001000 2
#17000000
1)
1*
1,
#17500000
b0000000000001001 #
b0000000000001001 '
0)
0*
0,
b0000000000001001 .
b0000000000001001 /
b0000000000001001 2
#18000000
1)
1*
1,
#18500000
b0000000000001010 #
b0000000000001010 '
0)
0*
0,
b0000000000001010 .
b0000000000001010 /
b0000000000001010 2
#19000000
1)
1*
1,
#19500000
b0000000000001011 #
b0000000000001011 '
0)
0*
0,
b0000000000001011 .
b0000000000001011 /
b0000000000001011 2
#20000000
1)
1*
1,
#20500000
b0000000000001100 #
b0000000000001100 '
0)
0*
0,
b0000000000001100 .
b0000000000001100 /
b0000000000001100 2
#21000000
1)
1*
1,
#21500000
b0000000000001101 #
b0000000000001101 '
0)
0*
0,
b0000000000001101 .
b0000000000001101 /
b0000000000001101 2
#22000000
1)
1*
1,
#22500000
b0000000000001110 #
b0000000000001110 '
0)
0*
0,
b0000000000001110 .
b0000000000001110 /
b0000000000001110 2
#23000000
1)
1*
1,
#23500000
b0000000000001111 #
b0000000000001111 '
0)
0*
0,
b0000000000001111 .
b0000000000001111 /
b0000000000001111 2
#24000000
1)
1*
1,
#24500000
b0000000000010000 #
b0000000000010000 '
0)
0*
0,
b0000000000010000 .
b0000000000010000 /
b0000000000010000 2
#25000000
1)
1*
1,
#25500000
b0000000000010001 #
b0000000000010001 '
0)
0*
0,
b0000000000010001 .
b0000000000010001 /
b0000000000010001 2
#26000000
1)
1*
1,
#26500000
b0000000000010010 #
b0000000000010010 '
0)
0*
0,
b0000000000010010 .
b0000000000010010 /
b0000000000010010 2
#27000000
1)
1*
1,
#27500000
b0000000000010011 #
b0000000000010011 '
0)
0*
0,
b0000000000010011 .
b0000000000010011 /
b0000000000010011 2
#28000000
1)
1*
1,
#28500000
b0000000000010100 #
b0000000000010100 '
0)
0*
0,
b0000000000010100 .
b0000000000010100 /
b0000000000010100 2
#29000000
1)
1*
1,
#29500000
b0000000000010101 #
b0000000000010101 '
0)
0*
0,
b0000000000010101 .
b0000000000010101 /
b0000000000010101 2
#30000000
1)
1*
1,
#30500000
b0000000000010110 #
b0000000000010110 '
0)
0*
0,
b0000000000010110 .
b0000000000010110 /
b0000000000010110 2
#31000000
1)
1*
1,
#31500000
b0000000000010111 #
b0000000000010111 '
0)
0*
0,
b0000000000010111 .
b0000000000010111 /
b0000000000010111 2
#32000000
1)
1*
1,
#32500000
b0000000000011000 #
b0000000000011000 '
0)
0*
0,
b0000000000011000 .
b0000000000011000 /
b0000000000011000 2
#33000000
1)
1*
1,
#33500000
b0000000000011001 #
b0000000000011001 '
0)
0*
0,
b0000000000011001 .
b0000000000011001 /
b0000000000011001 2
#34000000
1)
1*
1,
#34500000
b0000000000011010 #
b0000000000011010 '
0)
0*
0,
b0000000000011010 .
b0000000000011010 /
b0000000000011010 2
#35000000
1)
1*
1,
#35500000
b0000000000011011 #
b0000000000011011 '
0)
0*
0,
b0000000000011011 .
b0000000000011011 /
b0000000000011011 2
#36000000
1)
1*
1,
#36500000
b0000000000011100 #
b0000000000011100 '
0)
0*
0,
b0000000000011100 .
b0000000000011100 /
b0000000000011100 2
#37000000
1)
1*
1,
#37500000
b0000000000011101 #
b0000000000011101 '
0)
0*
0,
b0000000000011101 .
b0000000000011101 /
b0000000000011101 2
#38000000
1)
1*
1,
#38500000
b0000000000011110 #
b0000000000011110 '
0)
0*
0,
b0000000000011110 .
b0000000000011110 /
b0000000000011110 2
#39000000
0!
0%
1)
1*
0+
1,
#39500000
b0000000000011111 #
b0000000000011111 '
0)
0*
0,
b0000000000011111 .
b0000000000011111 /
b0000000000011111 2
